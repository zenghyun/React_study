{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"INCREASE\":\n      return {\n        counter: state.counter + 1\n      };\n    case \"DECREASE\":\n      return {\n        coutner: state.counter - 1\n      };\n    default:\n      return state;\n  }\n};\nconst store = configureStore({\n  reducer: counterReducer\n});\nexport default store;","map":{"version":3,"names":["configureStore","counterReducer","state","arguments","length","undefined","counter","action","type","coutner","store","reducer"],"sources":["/Users/zenghyun/Desktop/frontend/study/react/13_Redux_re/src/store/index.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\n\nconst counterReducer = (state = { counter: 0 }, action) => {\n  switch (action.type) {\n    case \"INCREASE\":\n      return {\n        counter: state.counter + 1,\n      };\n    case \"DECREASE\":\n      return {\n        coutner: state.counter - 1,\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = configureStore({\n  reducer: counterReducer,\n});\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAAoC;EAAA,IAAnCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAEG,OAAO,EAAE;EAAE,CAAC;EAAA,IAAEC,MAAM,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpD,QAAQE,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QACLF,OAAO,EAAEJ,KAAK,CAACI,OAAO,GAAG;MAC3B,CAAC;IACH,KAAK,UAAU;MACb,OAAO;QACLG,OAAO,EAAEP,KAAK,CAACI,OAAO,GAAG;MAC3B,CAAC;IACH;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,MAAMQ,KAAK,GAAGV,cAAc,CAAC;EAC3BW,OAAO,EAAEV;AACX,CAAC,CAAC;AAEF,eAAeS,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}