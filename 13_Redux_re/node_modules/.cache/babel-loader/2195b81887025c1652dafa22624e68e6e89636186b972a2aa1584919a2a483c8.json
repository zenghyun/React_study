{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        counter: state.counter + 1,\n        showCounter: state.showCounter\n      };\n    case \"INCREASE\":\n      return {\n        counter: state.counter + action.amount,\n        showCounter: state.showCounter\n      };\n    case \"DECREMENT\":\n      return {\n        counter: state.counter - 1,\n        showCounter: state.showCounter\n      };\n    case \"TOGGLE\":\n      return {\n        showCounter: !state.showCounter,\n        counter: state.counter\n      };\n    default:\n      return state;\n  }\n};\nconst store = configureStore({\n  reducer: counterReducer\n});\nexport default store;","map":{"version":3,"names":["configureStore","initialState","counter","showCounter","counterReducer","state","arguments","length","undefined","action","type","amount","store","reducer"],"sources":["/Users/zenghyun/Desktop/frontend/study/react/13_Redux_re/src/store/index.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\n\nconst initialState = { counter: 0, showCounter: true };\n\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        counter: state.counter + 1,\n        showCounter: state.showCounter,\n      };\n    case \"INCREASE\":\n      return {\n        counter: state.counter + action.amount,\n        showCounter: state.showCounter,\n      };\n    case \"DECREMENT\":\n      return {\n        counter: state.counter - 1,\n        showCounter: state.showCounter,\n      };\n    case \"TOGGLE\":\n      return {\n        showCounter: !state.showCounter,\n        counter: state.counter,\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = configureStore({\n  reducer: counterReducer,\n});\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAClD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QACLR,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG,CAAC;QAC1BC,WAAW,EAAEE,KAAK,CAACF;MACrB,CAAC;IACH,KAAK,UAAU;MACb,OAAO;QACLD,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAGO,MAAM,CAACE,MAAM;QACtCR,WAAW,EAAEE,KAAK,CAACF;MACrB,CAAC;IACH,KAAK,WAAW;MACd,OAAO;QACLD,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG,CAAC;QAC1BC,WAAW,EAAEE,KAAK,CAACF;MACrB,CAAC;IACH,KAAK,QAAQ;MACX,OAAO;QACLA,WAAW,EAAE,CAACE,KAAK,CAACF,WAAW;QAC/BD,OAAO,EAAEG,KAAK,CAACH;MACjB,CAAC;IACH;MACE,OAAOG,KAAK;EAChB;AACF,CAAC;AAED,MAAMO,KAAK,GAAGZ,cAAc,CAAC;EAC3Ba,OAAO,EAAET;AACX,CAAC,CAAC;AAEF,eAAeQ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}