{"ast":null,"code":"var _jsxFileName = \"/Users/zenghyun/Desktop/frontend/udemy/react/11-Handling_Forms_User_Input/src/components/BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use_input_ver2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isNotEmpty = value => value.trim() !== \"\";\nconst isEmail = value => value.includes(\"@\");\nconst BasicForm = props => {\n  _s();\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameInputBlurHandler,\n    reset: resetFirstNameInput\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameInputBlurHandler,\n    reset: resetLastNameInput\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: resetEmailInput\n  } = useInput(isEmail);\n  let formIsValid = false;\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  } else {\n    formIsValid = false;\n  }\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n    console.log(\"ðŸš€  enteredFirstName\", enteredFirstName);\n    console.log(\"ðŸš€  enteredLastName\", enteredLastName);\n    console.log(\"ðŸš€  enteredEmail\", enteredEmail);\n    resetFirstNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  };\n  const firstNameClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameInputBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"First name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameInputBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Last name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"ea0yCjfd1EXEAq2B5BOM9wD0IaU=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","isNotEmpty","value","trim","isEmail","includes","BasicForm","props","_s","enteredFirstName","isValid","enteredFirstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameInputBlurHandler","reset","resetFirstNameInput","enteredLastName","enteredLastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameInputBlurHandler","resetLastNameInput","enteredEmail","enteredEmailIsValid","emailHasError","emailChangeHandler","emailInputBlurHandler","resetEmailInput","formIsValid","formSubmitHandler","event","preventDefault","console","log","firstNameClasses","lastNameClasses","emailClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/zenghyun/Desktop/frontend/udemy/react/11-Handling_Forms_User_Input/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use_input_ver2\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\nconst isEmail = value => value.includes(\"@\");\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameInputBlurHandler,\n    reset: resetFirstNameInput,\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameInputBlurHandler,\n    reset: resetLastNameInput,\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: resetEmailInput,\n  } = useInput(isEmail);\n  \n  let formIsValid = false;\n  \n  if (\n    enteredFirstNameIsValid &&\n    enteredLastNameIsValid &&\n    enteredEmailIsValid\n    ) {\n      formIsValid = true;\n    } else {\n      formIsValid = false;\n    }\n    \n    const formSubmitHandler = (event) => {\n      event.preventDefault();\n      \n      if (\n      !formIsValid\n        ) {\n          return;\n        }\n        \n        console.log(\"ðŸš€  enteredFirstName\", enteredFirstName)\n        console.log(\"ðŸš€  enteredLastName\", enteredLastName)\n        console.log(\"ðŸš€  enteredEmail\", enteredEmail)\n       \n        resetFirstNameInput();\n        resetLastNameInput();\n        resetEmailInput();\n      };\n      \n      const firstNameClasses = firstNameHasError\n      ? \"form-control invalid\"\n      : \"form-control\";\n  const lastNameClasses = lastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameInputBlurHandler}\n            value={enteredFirstName}\n          />\n          {firstNameHasError && <p>First name must not be empty.</p>}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameInputBlurHandler}\n            value={enteredLastName}\n          />\n          {lastNameHasError && <p>Last name must not be empty.</p>}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={emailChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailHasError && <p>Please enter a valid email.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}