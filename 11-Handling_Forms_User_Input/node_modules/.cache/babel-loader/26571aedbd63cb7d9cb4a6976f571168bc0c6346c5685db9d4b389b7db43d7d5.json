{"ast":null,"code":"var _jsxFileName = \"/Users/zenghyun/Desktop/frontend/udemy/react/11-Handling_Forms_User_Input/src/components/BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use_input_ver2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameInputBlurHandler,\n    reset: resetFirstNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameInputBlurHandler,\n    reset: resetLastNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes(\"@\"));\n  let formIsValid = false;\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  } else {\n    formIsValid = false;\n  }\n  const formSubmitHandler = event => {\n    event.preventDefalut();\n    if (!enteredFirstNameIsValid || !enteredLastNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    console.log(\"ðŸš€  enteredFirstName\", enteredFirstName);\n    console.log(\"ðŸš€  enteredLastName\", enteredLastName);\n    console.log(\"ðŸš€  enteredEmail\", enteredEmail);\n    resetFirstNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  };\n  const firstNameClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameInputBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"First name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameInputBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Last name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"ea0yCjfd1EXEAq2B5BOM9wD0IaU=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","BasicForm","props","_s","value","enteredFirstName","isValid","enteredFirstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameInputBlurHandler","reset","resetFirstNameInput","trim","enteredLastName","enteredLastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameInputBlurHandler","resetLastNameInput","enteredEmail","enteredEmailIsValid","emailHasError","emailChangeHandler","emailInputBlurHandler","resetEmailInput","includes","formIsValid","formSubmitHandler","event","preventDefalut","console","log","firstNameClasses","lastNameClasses","emailClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/zenghyun/Desktop/frontend/udemy/react/11-Handling_Forms_User_Input/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use_input_ver2\";\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameInputBlurHandler,\n    reset: resetFirstNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameInputBlurHandler,\n    reset: resetLastNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.includes(\"@\"));\n  \n  let formIsValid = false;\n  \n  if (\n    enteredFirstNameIsValid &&\n    enteredLastNameIsValid &&\n    enteredEmailIsValid\n    ) {\n      formIsValid = true;\n    } else {\n      formIsValid = false;\n    }\n    \n    const formSubmitHandler = (event) => {\n      event.preventDefalut();\n      \n      if (\n        !enteredFirstNameIsValid ||\n        !enteredLastNameIsValid ||\n        !enteredEmailIsValid\n        ) {\n          return;\n        }\n        \n        console.log(\"ðŸš€  enteredFirstName\", enteredFirstName)\n        console.log(\"ðŸš€  enteredLastName\", enteredLastName)\n        console.log(\"ðŸš€  enteredEmail\", enteredEmail)\n       \n        resetFirstNameInput();\n        resetLastNameInput();\n        resetEmailInput();\n      };\n      \n      const firstNameClasses = firstNameHasError\n      ? \"form-control invalid\"\n      : \"form-control\";\n  const lastNameClasses = lastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameInputBlurHandler}\n            value={enteredFirstName}\n          />\n          {firstNameHasError && <p>First name must not be empty.</p>}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameInputBlurHandler}\n            value={enteredLastName}\n          />\n          {lastNameHasError && <p>Last name must not be empty.</p>}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={emailChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailHasError && <p>Please enter a valid email.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}