{"ast":null,"code":"var _jsxFileName = \"/Users/zenghyun/Desktop/frontend/udemy/react/12-The_Food_Order_App3/src/components/Meals/AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://food-app-4dfd9-default-rtdb.firebaseio.com/');\n      const responseData = await response.json();\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    try {\n      fetchMeals();\n    } catch (error) {\n      setIsLoading(false);\n      setHttpError(error.message);\n    }\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  const mealList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"Lu1Q2C9EcfudvR8Ir+GR0sfSSjE=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useEffect","useState","Card","classes","MealItem","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","responseData","json","ok","Error","loadedMeals","key","push","id","name","description","price","error","message","className","MealsLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","MealsError","mealList","map","meal","_c","$RefreshReg$"],"sources":["/Users/zenghyun/Desktop/frontend/udemy/react/12-The_Food_Order_App3/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading ] = useState(true);\n  const [httpError, setHttpError] = useState();\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n     const response =  await fetch('https://food-app-4dfd9-default-rtdb.firebaseio.com/');\n     const responseData = await response.json();\n\n     if(!response.ok) {\n      throw new Error('Something went wrong!');\n     }\n\n     const loadedMeals = []; \n\n     for(const key in responseData) {\n      loadedMeals.push({\n        id: key,\n        name: responseData[key].name,\n        description: responseData[key].description,\n        price: responseData[key].price\n      });\n     }\n     setMeals(loadedMeals);\n     setIsLoading(false);\n    };\n    try {\n      fetchMeals();\n    } catch(error) {\n      setIsLoading(false);\n      setHttpError(error.message);\n    }\n  }, [])\n\n  if(isLoading) {\n    return (\n    <section className={classes.MealsLoading}>\n      <h2>Loading...</h2>\n    </section>\n    );\n  }\n\n  if(httpError) {\n    return (\n      <section className={classes.MealsError}>\n        <p>{httpError}</p>\n      </section>\n      );\n  }\n\n  const mealList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,QAAQ,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAE,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACjD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,EAAE;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAI,MAAMC,KAAK,CAAC,qDAAqD,CAAC;MACpF,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAE1C,IAAG,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MACzC;MAEA,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAI,MAAMC,GAAG,IAAIL,YAAY,EAAE;QAC9BI,WAAW,CAACE,IAAI,CAAC;UACfC,EAAE,EAAEF,GAAG;UACPG,IAAI,EAAER,YAAY,CAACK,GAAG,CAAC,CAACG,IAAI;UAC5BC,WAAW,EAAET,YAAY,CAACK,GAAG,CAAC,CAACI,WAAW;UAC1CC,KAAK,EAAEV,YAAY,CAACK,GAAG,CAAC,CAACK;QAC3B,CAAC,CAAC;MACH;MACAlB,QAAQ,CAACY,WAAW,CAAC;MACrBV,YAAY,CAAC,KAAK,CAAC;IACpB,CAAC;IACD,IAAI;MACFG,UAAU,EAAE;IACd,CAAC,CAAC,OAAMc,KAAK,EAAE;MACbjB,YAAY,CAAC,KAAK,CAAC;MACnBE,YAAY,CAACe,KAAK,CAACC,OAAO,CAAC;IAC7B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAGnB,SAAS,EAAE;IACZ,oBACAL,OAAA;MAASyB,SAAS,EAAE5B,OAAO,CAAC6B,YAAa;MAAAC,QAAA,eACvC3B,OAAA;QAAA2B,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACX;EAEZ;EAEA,IAAGxB,SAAS,EAAE;IACZ,oBACEP,OAAA;MAASyB,SAAS,EAAE5B,OAAO,CAACmC,UAAW;MAAAL,QAAA,eACrC3B,OAAA;QAAA2B,QAAA,EAAIpB;MAAS;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACV;EAEd;EAEA,MAAME,QAAQ,GAAG9B,KAAK,CAAC+B,GAAG,CAAEC,IAAI,iBAC9BnC,OAAA,CAACF,QAAQ;IAEPqB,EAAE,EAAEgB,IAAI,CAAChB,EAAG;IACZC,IAAI,EAAEe,IAAI,CAACf,IAAK;IAChBC,WAAW,EAAEc,IAAI,CAACd,WAAY;IAC9BC,KAAK,EAAEa,IAAI,CAACb;EAAM,GAJba,IAAI,CAAChB,EAAE;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAMf,CAAC;EAEF,oBACE/B,OAAA;IAASyB,SAAS,EAAE5B,OAAO,CAACM,KAAM;IAAAwB,QAAA,eAChC3B,OAAA,CAACJ,IAAI;MAAA+B,QAAA,eACH3B,OAAA;QAAA2B,QAAA,EAAKM;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAM;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACd;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAAC7B,EAAA,CApEID,cAAc;AAAAmC,EAAA,GAAdnC,cAAc;AAsEpB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}