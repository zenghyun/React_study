{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zenghyun/Desktop/frontend/study/react/20-NextJS/pages/index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetUpList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://건축계산기.com/asset/media/remodel.jpg\",\n  address: \"Some address 10, 12335, Some City\",\n  description: \"This is a first meetup!\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://건축계산기.com/asset/media/remodel.jpg\",\n  address: \"Some address 11, 12335, Some City\",\n  description: \"This is a second meetup!\"\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetUpList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n//     // fetch data from an API\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         },\n//     }\n// }\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://wjdgus2138:wjdgus4530@cluster0.te55saw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description,\n        id: meetup.id.toString()\n      }))\n    },\n    revalidate: 1 // 1초 마다 서버에서 페이지를 다시 생성하게 함 \n\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/zenghyun/Desktop/frontend/study/react/20-NextJS/pages/index.js"],"names":["MongoClient","MeetUpList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","toString","revalidate"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EAAE,2CAHT;AAIEC,EAAAA,OAAO,EAAE,mCAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CADoB,EAQpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EAAE,2CAHT;AAIEC,EAAAA,OAAO,EAAE,mCAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CARoB,CAAtB;;AAiBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AACrCjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADuB;AAErCE,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAFqB;AAGrCD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHuB;AAIrCE,QAAAA,WAAW,EAAEc,MAAM,CAACd,WAJiB;AAKrCJ,QAAAA,EAAE,EAAEkB,MAAM,CAAClB,EAAP,CAAUmB,QAAV;AALiC,OAAL,CAAlB;AAAX,KADF;AAQLC,IAAAA,UAAU,EAAE,CARP,CAQU;;AARV,GAAP;AAUD;AAED,eAAef,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport MeetUpList from \"../components/meetups/MeetupList\";\n\nconst DUMMY_MEETUPS = [\n  {\n    id: \"m1\",\n    title: \"A First Meetup\",\n    image: \"https://건축계산기.com/asset/media/remodel.jpg\",\n    address: \"Some address 10, 12335, Some City\",\n    description: \"This is a first meetup!\",\n  },\n  {\n    id: \"m2\",\n    title: \"A Second Meetup\",\n    image: \"https://건축계산기.com/asset/media/remodel.jpg\",\n    address: \"Some address 11, 12335, Some City\",\n    description: \"This is a second meetup!\",\n  },\n];\n\nfunction HomePage(props) {\n  return (\n    <>\n      <MeetUpList meetups={props.meetups} />\n    </>\n  );\n}\n\n// export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n\n//     // fetch data from an API\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         },\n//     }\n// }\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n    \"mongodb+srv://wjdgus2138:wjdgus4530@cluster0.te55saw.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: { meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description,\n        id: meetup.id.toString(),\n    })) },\n    revalidate: 1, // 1초 마다 서버에서 페이지를 다시 생성하게 함 \n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}