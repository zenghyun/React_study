{"ast":null,"code":"var _jsxFileName = \"/Users/zenghyun/Desktop/frontend/udemy/react/06-Effect-Reducers-Context/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useContext, useRef } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n}; // reducer 함수가 Login 컴포넌트 함수 범위 바깥에서 만들어진 이유는 리듀서 함수 내부에서는 Login 함수 내부에서 만들어진 어떤 데이터도 필요하지 않기 때문이다.\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPasword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState; // 객체 디스트럭쳐링 별칭 할당\n  const {\n    isValid: passwordIsValid\n  } = passwordState; // 별칭 할당\n\n  const authContext = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  useEffect(() => {\n    // enteredEmail, enteredPassword 입력 값이 바뀔 때마다 매번 실행\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity!\");\n      setFormIsValid(emailIsValid && passwordIsValid); // isValid 값이 true이면 더이상 유효성 검사를 실행하지 않음\n    }, 500);\n    return () => {\n      clearTimeout(identifier); // 이전에 timer를 지우고 마지막 timer만 동작시킴\n      console.log(\"clean up\");\n    }; // cleanup function\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    // setFormIsValid(\n    //   emailState.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPasword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n\n    // setFormIsValid(\n    //   emailState.isValid && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n    // setEmailIsValid(emailState.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPasword({\n      type: \"INPUT_BLUR\"\n    });\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    if (formIsValid) {\n      authContext.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"E-mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"pJtAI4KNrJ3mm7l9bvNH8xr/sC8=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","Input","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","_s","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPasword","emailIsValid","passwordIsValid","authContext","emailInputRef","passwordInputRef","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","current","focus","className","login","children","onSubmit","ref","id","label","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","actions","btn","_c","$RefreshReg$"],"sources":["/Users/zenghyun/Desktop/frontend/udemy/react/06-Effect-Reducers-Context/src/components/Login/Login.js"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useContext,\n  useRef,\n} from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/input/Input\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n}; // reducer 함수가 Login 컴포넌트 함수 범위 바깥에서 만들어진 이유는 리듀서 함수 내부에서는 Login 함수 내부에서 만들어진 어떤 데이터도 필요하지 않기 때문이다.\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n  const [passwordState, dispatchPasword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const { isValid: emailIsValid } = emailState; // 객체 디스트럭쳐링 별칭 할당\n  const { isValid: passwordIsValid } = passwordState; // 별칭 할당\n\n  const authContext = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  useEffect(() => {\n    // enteredEmail, enteredPassword 입력 값이 바뀔 때마다 매번 실행\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity!\");\n      setFormIsValid(emailIsValid && passwordIsValid); // isValid 값이 true이면 더이상 유효성 검사를 실행하지 않음\n    }, 500);\n\n    return () => {\n      clearTimeout(identifier); // 이전에 timer를 지우고 마지막 timer만 동작시킴\n      console.log(\"clean up\");\n    }; // cleanup function\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n    // setFormIsValid(\n    //   emailState.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPasword({ type: \"USER_INPUT\", val: event.target.value });\n\n    // setFormIsValid(\n    //   emailState.isValid && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n    // setEmailIsValid(emailState.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPasword({ type: \"INPUT_BLUR\" });\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      authContext.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          ref={emailInputRef}\n          id=\"email\"\n          label=\"E-mail\"\n          type=\"email\"\n          isValid={emailIsValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <Input\n          ref={passwordInputRef}\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          isValid={passwordIsValid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}